Kripke "mc_kripke.dot" Space "mc_space.dot" Eval "mc_eval.csv";

Let full = [vacant == 0];
Let cluster = I full;

Let cluster2steps = cluster & (A X cluster); 
Let cluster3steps = cluster & (A X cluster2steps);

Let boundary(x) = (!x) & (N x);
Let growingCluster = (!full) & (N (boundary(cluster))) & (A X full);
Let shrinkingCluster =  cluster & (A X (!full));	

Let implies(x,y) = (!x) | y;
Let nextCluster =  (E F full) & (A G implies(full,A full U cluster));
Let boundaryCluster =  boundary(E F cluster);

//// Persistence of clusters

Output "output/eventuallyCluster";

Check "0x00FF00" E F cluster;
Check "0x0000FF" E F cluster2steps;
Check "0xFF0000" E F cluster3steps;


//// Growth of clusters

Output "output/evolvingCluster";
Check "0x00FF00" E F cluster;

// Growing clusters
Check "0xFF0000" growingCluster;

// Shrinking of clusters
Check "0x0000FF" shrinkingCluster;


//// Transformation of clusters

Output "output/nextCluster";

Check "0xFF0000" nextCluster;
Check "0x00FF00" boundaryCluster;

//// Repetition of clusters

//Output "output/repetition";
//Check "0xFF0000" E F (full & E F ((!full) & (E F full)));
//Check "0x0000FF" (E F full) & (! ( E F (full & E F ((!full) & (E F full)))));
//Check "0x0000FF" E F (full & (!(E F (!full))));

//Check "0x00EE00" (E F full);
//Check "0xFF0000" (E F full) & (A G ( (! full) | (full S (E F full))));
//Check "0x0000FF" ((E F full) & ! (I (E F full))) & ((E F full) & (A G ( (! full) | (full S (E F full)))));
//Check "0x0000FF" ((E F full) & ! (I (E F full))) & ((E F full) & (A G ( (! full) | I (E F full))));
//Check "0x00FF00" ! (E F full);


//Check "0xFF0000" (E F full) & (A G ( (! full) | (TT S (E F full))));
//Check "0x0000FF" ((E F full) & ! (I (E F full))) & ((E F full) & (A G ( (! full) | (TT S (E F full)))));


